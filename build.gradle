plugins {
    id 'java'
    id "org.sonarqube" version "3.0"
}

apply plugin: 'jacoco'

group 'den.vor'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext.versions = [
        junit : '5.5.1',
        mockitoJunit: '2.28.2',
        apacheRng: '1.2',
        cache: '3.8.1'
]

test {
    useJUnitPlatform()
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, excludes: [
                    '**/*Configuration.class'
            ])
        })
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled true
    }
}
test.finalizedBy(jacocoTestReport)

dependencies {
    compile("org.apache.commons:commons-rng-core:${versions.apacheRng}")
    compile("org.ehcache:ehcache:${versions.cache}")

    testCompile("org.junit.jupiter:junit-jupiter-api:${versions.junit}")
    testCompile("org.junit.jupiter:junit-jupiter-engine:${versions.junit}")
    testCompile("org.mockito:mockito-junit-jupiter:${versions.mockitoJunit}")
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '2.2'
}

sonarqube {
    properties {
        property "sonar.projectKey", "EasyObject_easy-object"
        property "sonar.organization", "easyobject"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

file("sonar-project.properties").withReader {
    Properties sonarProperties = new Properties();
    sonarProperties.load(it)

    sonarProperties.forEach { key, value ->
        sonarqube {
            properties {
                property key, value
            }
        }
    }
}