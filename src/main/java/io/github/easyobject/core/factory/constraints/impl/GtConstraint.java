/*
 * Copyright (c) 2020-2021 Danila Varatyntsev
 *
 * Licensed under the MIT License (the "License");
 * you may not use this file except in compliance with the License.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.easyobject.core.factory.constraints.impl;

import io.github.easyobject.core.factory.constraints.Bound;
import io.github.easyobject.core.factory.constraints.SequenceConstraint;
import io.github.easyobject.core.factory.constraints.SequenceConstraintsValues;

/**
 * Greater-than constraint ({@code >}).
 * Is applied to the lower bound. Newly set bound is <b>exclusive</b>.
 *
 * @param <T> type of object, generated by the factory
 */
public class GtConstraint<T extends Comparable<? super T>> extends SequenceConstraint<T> {

    public GtConstraint(String constraint) {
        super(constraint);
    }

    @Override
    public SequenceConstraintsValues<T> apply(SequenceConstraintsValues<T> constraintsValues, T value) {
        if (value.compareTo(constraintsValues.getMin().getValue()) >= 0) {
            constraintsValues.setMin(new Bound<>(value, false));
        }
        return constraintsValues;
    }
}
